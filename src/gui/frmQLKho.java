/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.ConnectDB;
import dao.DangNhap;
import io.FileFactory;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kan
 */
public class frmQLKho extends javax.swing.JFrame {

    DefaultTableModel khoModel;
    Vector header, data, row;
    Boolean isUpdate, isNhap_kho = false;
    int sl_ton, sl_nhap, sl_xuat, gia;
    String ma_DV, ten_DV, loai_DV, dvt, nhan, giaStr, sl_tonStr, sl_nhapStr;
    String ldv = "1";

    int dong, ma;
    Connection con;
    Statement stmt;
    ResultSet rs, rsTK;
    String url, sql;

    public frmQLKho() {
        initComponents();
        HienThiUser();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setResizable(false);
        showTable();
    }

    private void showTable() {

        khoModel = new DefaultTableModel();
        header = new Vector();
        header.add("Mã DV");
        header.add("Tên DV");
        header.add("Loại DV");
        header.add("Đơn vị tính");
        header.add("Giá");
        header.add("Số lượng nhập");
        header.add("Số lượng xuất");
        header.add("Số lượng tồn");

        data = new Vector();
        try {
            con = ConnectDB.getConnect();
            sql = "SELECT ma_DV, ten_DV, loai_DV, dvt, gia, sl_nhap, sl_xuat, sl_ton  FROM Kho WHERE tinh_trang = 0 order by ma_DV asc ";
            stmt = con.createStatement();
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                row = new Vector();
                row.add(rs.getString("ma_DV"));
                row.add(rs.getString("ten_DV"));
                row.add(rs.getString("loai_DV"));
                row.add(rs.getString("dvt"));
                row.add(rs.getInt("gia"));
                row.add(rs.getInt("sl_nhap"));
                row.add(rs.getInt("sl_xuat"));
                row.add(rs.getInt("sl_ton"));
                data.add(row);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        khoModel.setDataVector(data, header);
        tblKho.setModel(khoModel);

        txtTenDV.setEditable(false);
        txtDvt.setEditable(false);
        txtGia.setEditable(false);
        txtSo_luong.setEditable(false);
        cbLoai.setEnabled(false);

        btnThem.setEnabled(true);
        btnSua.setEnabled(false);
        btnDelete.setEnabled(false);
        btnSave.setEnabled(false);
        btnNhap_kho.setEnabled(false);
    }

    private void clearField() {
        txtTenDV.setText("");
        txtGia.setText("");
        txtSo_luong.setText("");
        txtDvt.setText("");
        cbLoai.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelChitiet = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        txtSo_luong = new javax.swing.JTextField();
        txtDvt = new javax.swing.JTextField();
        txtTenDV = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbLoai = new javax.swing.JComboBox<>();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnThoat = new javax.swing.JButton();
        btnNhap_kho = new javax.swing.JButton();
        panelDanhsach = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblKho = new javax.swing.JTable();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý Kho");
        setName("frmQLKho"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(226, 225, 225));

        panelChitiet.setBackground(new java.awt.Color(226, 225, 225));
        panelChitiet.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Đơn vị tính:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Giá:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Số lượng:");

        txtGia.setName(""); // NOI18N

        txtTenDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenDVActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Loại Dịch vụ:");

        cbLoai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Giải khát", "Thức ăn", "Khác" }));

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(102, 0, 0));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSua.setForeground(new java.awt.Color(102, 0, 0));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(102, 0, 0));
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(102, 0, 0));
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Tên Dịch vụ:");

        btnThoat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/thoat.png"))); // NOI18N
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        btnNhap_kho.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNhap_kho.setForeground(new java.awt.Color(102, 0, 0));
        btnNhap_kho.setText("Nhập kho");
        btnNhap_kho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhap_khoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelChitietLayout = new javax.swing.GroupLayout(panelChitiet);
        panelChitiet.setLayout(panelChitietLayout);
        panelChitietLayout.setHorizontalGroup(
            panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChitietLayout.createSequentialGroup()
                .addGroup(panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelChitietLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(119, 119, 119)
                        .addGroup(panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTenDV, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDvt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(103, 103, 103)
                        .addGroup(panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))
                        .addGap(40, 40, 40)
                        .addGroup(panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSo_luong, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelChitietLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnNhap_kho, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        panelChitietLayout.setVerticalGroup(
            panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChitietLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTenDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDvt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtSo_luong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelChitietLayout.createSequentialGroup()
                        .addGroup(panelChitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNhap_kho))
                        .addGap(12, 12, 12))
                    .addGroup(panelChitietLayout.createSequentialGroup()
                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel7.getAccessibleContext().setAccessibleName("");

        panelDanhsach.setBackground(new java.awt.Color(226, 225, 225));
        panelDanhsach.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 0, 255))); // NOI18N

        tblKho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã DV", "Tên DV", "Loại DV", "Đơn vị tính", "Giá", "Số lượng nhập", "Số lượng xuât", "Số lượng tồn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblKho);

        jScrollPane2.setViewportView(jScrollPane4);

        javax.swing.GroupLayout panelDanhsachLayout = new javax.swing.GroupLayout(panelDanhsach);
        panelDanhsach.setLayout(panelDanhsachLayout);
        panelDanhsachLayout.setHorizontalGroup(
            panelDanhsachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
        );
        panelDanhsachLayout.setVerticalGroup(
            panelDanhsachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDanhsachLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDanhsach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelChitiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(149, 149, 149))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelChitiet, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelDanhsach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(226, 225, 225));
        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("QUẢN LÝ KHO ");
        jTextField3.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField3)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 956, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblKhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhoMouseClicked

        dong = tblKho.getSelectedRow();
        ma_DV = (String) khoModel.getValueAt(dong, 0);
        txtTenDV.setText((String) khoModel.getValueAt(dong, 1));
        cbLoai.setSelectedItem(khoModel.getValueAt(dong, 2).toString());
        txtDvt.setText((String) khoModel.getValueAt(dong, 3));
//        txtGia.setText(tblKho.getValueAt(row, 4).toString() );//Doi voi gia tri Integer
//        txtSl_nhap.setText(tblKho.getValueAt(row, 5).toString() );
//        ten_DV =(String)khoModel.getValueAt(dong, 1);
//        dvt = (String)khoModel.getValueAt(dong, 3);
        gia = (Integer) khoModel.getValueAt(dong, 4);
        sl_ton = (Integer) khoModel.getValueAt(dong, 7);
//        loai_DV = (String)khoModel.getValueAt(dong, 2);

        txtGia.setText(String.valueOf(gia));
        txtSo_luong.setText(String.valueOf(sl_ton));

        txtTenDV.setEditable(false);
        txtDvt.setEditable(false);
        cbLoai.setEditable(false);
        txtGia.setEditable(false);
        txtSo_luong.setEditable(false);

        btnSave.setEnabled(false);
        btnSua.setEnabled(true);
        btnDelete.setEnabled(true);
        btnThem.setEnabled(true);
        btnNhap_kho.setEnabled(true);


    }//GEN-LAST:event_tblKhoMouseClicked

    private void txtTenDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenDVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenDVActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        dong = tblKho.getSelectedRow();
        ma_DV = (String) khoModel.getValueAt(dong, 0);  // dong = tblBook.getSelectedRow();
        // title = (String)bookModel.getValueAt(dong, 0);

        if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa?", "Detele?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            khoModel.removeRow(dong);
            try {
                sql = "Update Kho set tinh_trang = 1 where ma_DV = " + ma_DV;
                stmt.executeUpdate(sql);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        btnSave.setEnabled(false);
        btnSua.setEnabled(false);
        btnDelete.setEnabled(false);
        btnThem.setEnabled(true);
        btnNhap_kho.setEnabled(false);

        clearField();

        txtTenDV.setEnabled(false);
        txtDvt.setEnabled(false);
        txtGia.setEnabled(false);
        txtSo_luong.setEnabled(false);

    }//GEN-LAST:event_btnDeleteActionPerformed


    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (!isUpdate) {

            ten_DV = txtTenDV.getText();
            loai_DV = cbLoai.getSelectedItem().toString();
            dvt = txtDvt.getText();
            //Convert String to Int, Double
            gia = Integer.parseInt(txtGia.getText());
            sl_nhap = Integer.parseInt(txtSo_luong.getText());
            int line = tblKho.getRowCount();

            while (true) {
                for (int i = 0; i < line; i++) {
                    if (txtTenDV.getText().trim().equals(khoModel.getValueAt(i, 1))) {
                        JOptionPane.showMessageDialog(null, "Tên trùng");
                        txtTenDV.grabFocus();
                        return;
                    }

                }
                if (txtTenDV.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(null, "tên không được để trống");
                    return;
                } else {
                    break;
                }
            }

            while (true) {
                if (txtDvt.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(null, "Đơn vị tính không được để trống");
                    return;
                } else {
                    break;
                }
            }

            while (true) {
                if (txtGia.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(null, "Gía không được bỏ trống.");
                    txtGia.grabFocus();
                    return;
                } else if (!txtGia.getText().trim().matches("[0-9]+") || Integer.parseInt(txtGia.getText().trim()) < 1000) {
                    JOptionPane.showMessageDialog(null, "Gía phải là số nguyên dương và > 1000.");
                    txtGia.grabFocus();
                    return;
                } else {
                    break;
                }
            }
            while (true) {
                if (txtSo_luong.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(null, "Số lượng nhập không được bỏ trống.");
                    txtSo_luong.grabFocus();
                    return;
                } else if (!txtSo_luong.getText().trim().matches("[0-9]+") || Integer.parseInt(txtSo_luong.getText().trim()) >= 1000) {
                    JOptionPane.showMessageDialog(null, "Số lượng nhập phải là số nguyên dương và < 1000.");
                    txtSo_luong.grabFocus();
                    return;
                } else {
                    break;
                }
            }
            //            sl_tonStr = txtSl_ton.getText();
            //            try {
            //                sl_ton = Integer.parseInt(sl_tonStr);
            //            } catch (Exception e) {
            //                JOptionPane.showMessageDialog(this, "Sai định dạng");
            //                return;
            //            }

            try {
                sql = "Insert into Kho (ten_DV, loai_DV, dvt, gia, sl_nhap, sl_ton, tinh_trang) values( N'" + ten_DV + "', N'" + loai_DV + "', N'" + dvt + "', " + gia + ", " + sl_nhap + "," + (sl_nhap - sl_xuat) + " , 0)";
                stmt.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Thêm dịch vụ thành công.");
            } catch (Exception e) {
                e.printStackTrace();
            }
            txtTenDV.setEnabled(true);
        txtDvt.setEnabled(true);
        txtGia.setEnabled(true);
        txtSo_luong.setEnabled(true);
        clearField();

        btnSave.setEnabled(false);
        btnDelete.setEnabled(false);
        btnSua.setEnabled(false);
        btnThem.setEnabled(true);
        btnNhap_kho.setEnabled(false);
        showTable();
        } else {
            //            dong = tblKho.getSelectedRow();

            if (!isNhap_kho)  {

                ten_DV = txtTenDV.getText();
                loai_DV = cbLoai.getSelectedItem().toString();
                dvt = txtDvt.getText();
                gia = Integer.parseInt(txtGia.getText());

                while (true) {
                    if (txtGia.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null, "Gía không được bỏ trống.");
                        txtGia.grabFocus();
                        return;
                    } else if (!txtGia.getText().trim().matches("[0-9]+") || Integer.parseInt(txtGia.getText().trim()) < 1000) {
                        JOptionPane.showMessageDialog(null, "Gía phải là số nguyên dương và > 1000.");
                        txtGia.grabFocus();
                        return;
                    } else {
                        break;
                    }
                }
                while (true) {
                    if (txtSo_luong.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null, "Số lượng nhập không được bỏ trống.");
                        txtSo_luong.grabFocus();
                        return;
                    } else if (!txtSo_luong.getText().trim().matches("[0-9]+") || Integer.parseInt(txtSo_luong.getText().trim()) >= 1000) {
                        JOptionPane.showMessageDialog(null, "Số lượng nhập phải là số nguyên dương và < 1000.");
                        txtSo_luong.grabFocus();
                        return;
                    } else {
                        break;
                    }
                }

                //dong = tblKho.getSelectedRow();
                //         khoModel.setValueAt(ma_DV, dong,0);
                //        khoModel.setValueAt(ten_DV, dong, 1);
                //        khoModel.setValueAt(loai_DV, dong, 2);
                //        khoModel.setValueAt(dvt, dong, 3);
                //khoModel.setValueAt(gia, dong, 4);
                //khoModel.setValueAt(sl_nhap, dong, 5);
//            int kho_sl_nhap = (Integer) khoModel.getValueAt(dong, 5);
//            int kho_sl_ton = (Integer) khoModel.getValueAt(dong, 7);
                //khoModel.setValueAt(sl_ton+sl_nhap, dong, 7);
                try {
                    sql = "update Kho set ten_DV = N'" + ten_DV + "', dvt = N'" + dvt + "', loai_DV = N'" + loai_DV + "', gia = " + gia + " where ma_DV = " + ma_DV;

                    stmt.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Cập nhật kho thành công.");

                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
                }

            } else {
                sl_nhap = Integer.parseInt(txtSo_luong.getText());
                while (true) {
                    if (txtSo_luong.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(null, "Số lượng nhập không được bỏ trống.");
                        txtSo_luong.grabFocus();
                        return;
                    } else if (!txtSo_luong.getText().trim().matches("[0-9]+") || Integer.parseInt(txtSo_luong.getText().trim()) >= 1000) {
                        JOptionPane.showMessageDialog(null, "Số lượng nhập phải là số nguyên dương và < 1000.");
                        txtSo_luong.grabFocus();
                        return;
                    } else {
                        break;
                    }
                }
                try {
                    sql = "update Kho set sl_nhap = sl_nhap + " + sl_nhap + ", sl_ton = sl_ton + " + sl_nhap + " where ma_DV = " + ma_DV;

                    stmt.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Nhập kho thành công.");

                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
                }
            }
        }
        txtTenDV.setEnabled(true);
        txtDvt.setEnabled(true);
        txtGia.setEnabled(true);
        txtSo_luong.setEnabled(true);
        clearField();

        btnSave.setEnabled(false);
        btnDelete.setEnabled(false);
        btnSua.setEnabled(false);
        btnThem.setEnabled(true);
        btnNhap_kho.setEnabled(false);
        showTable();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        isUpdate = true;
        isNhap_kho = false;

        txtTenDV.setEnabled(true);
        txtTenDV.setEditable(true);
        txtDvt.setEditable(true);
        cbLoai.setEnabled(true);
        txtGia.setEnabled(true);
        txtGia.setEditable(true);
        txtDvt.setEnabled(true);
        txtDvt.setEditable(true);
        txtSo_luong.setEnabled(true);
        txtSo_luong.setEditable(false);

        btnSave.setEnabled(true);
        btnDelete.setEnabled(true);
        btnSua.setEnabled(false);
        btnThem.setEnabled(false);
        btnNhap_kho.setEnabled(false);

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

        txtTenDV.setEnabled(true);
        txtTenDV.setEditable(true);
        txtDvt.setEditable(true);
        cbLoai.setEnabled(true);
        txtGia.setEnabled(true);
        txtGia.setEditable(true);
        txtDvt.setEnabled(true);
        txtDvt.setEditable(true);
        txtSo_luong.setEnabled(true);
        txtSo_luong.setEditable(true);

        btnSave.setEnabled(true);
        btnSua.setEnabled(false);
        btnDelete.setEnabled(false);
        btnThem.setEnabled(false);
        btnNhap_kho.setEnabled(false);

        isUpdate = false;
        clearField();

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        dispose();
        MenuChinh menuchinh = new MenuChinh(tenDN, hoTen, quyen, matkhau);
        menuchinh.setVisible(true);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnNhap_khoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhap_khoActionPerformed
        txtTenDV.setEnabled(true);
        txtTenDV.setEditable(false);
        txtDvt.setEditable(false);
        cbLoai.setEnabled(false);
        txtGia.setEnabled(true);
        txtGia.setEditable(false);
        txtDvt.setEnabled(true);
        txtDvt.setEditable(false);
        txtSo_luong.setEnabled(true);
        txtSo_luong.setEditable(true);
        txtSo_luong.setText("");

        btnSave.setEnabled(true);
        btnSua.setEnabled(false);
        btnDelete.setEnabled(false);
        btnThem.setEnabled(false);
        btnNhap_kho.setEnabled(false);

        isUpdate = true;
        isNhap_kho = true;
    }//GEN-LAST:event_btnNhap_khoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmQLKho qlk = new frmQLKho();
                qlk.setVisible(true);
                qlk.setTitle("Quản Lý Kho");
                qlk.setResizable(false);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNhap_kho;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JComboBox<String> cbLoai;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JPanel panelChitiet;
    private javax.swing.JPanel panelDanhsach;
    private javax.swing.JTable tblKho;
    private javax.swing.JTextField txtDvt;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtSo_luong;
    private javax.swing.JTextField txtTenDV;
    // End of variables declaration//GEN-END:variables

    String tenDN, hoTen, quyen, matkhau;

    private void HienThiUser() {
        File file = new File("data.data");
        if (file.exists()) {
            Object data = FileFactory.ReadData("data.data");
            if (data != null) {
                DangNhap dn = (DangNhap) data; // ép kiểu về dạng đối tượng
                tenDN = dn.getTen();
                hoTen = dn.getHoten();
                quyen = dn.getQuyen();
                matkhau = dn.getMatkhau();
            }
        }
    }

}
