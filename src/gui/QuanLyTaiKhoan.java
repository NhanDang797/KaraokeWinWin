/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.ConnectDB;
import dao.TaiKhoan;
import dao.TaiKhoanService;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.Vector;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nhandang
 */
public class QuanLyTaiKhoan extends javax.swing.JDialog {

    DefaultTableModel dtmTaiKhoan;
    DefaultComboBoxModel dcTinhTrang;
    ArrayList<TaiKhoan> dsTaiKhoan;
    TaiKhoanService taiKhoanService;
    TaiKhoan taiKhoanSelected;
    String tenDN;
    String quyenDN;
    Icon icon = new ImageIcon(getClass().getResource("/image/warning.png"));
    Icon iconSuccess = new ImageIcon(getClass().getResource("/image/success.png"));

    /**
     * Creates new form DoiMatKhaua
     */
    public QuanLyTaiKhoan(java.awt.Frame parent, boolean modal, String ten_dn, String quyen) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        setResizable(false);
        this.setTitle("Tài Khoản");
        // hiện thông tin lên table
        HienThiLenTable();
        taiKhoanService = new TaiKhoanService();
        comTinhTrang.setEnabled(false);

        txtTenNguoiDung.setEditable(true);
        chkNhanVien.setSelected(true);
        chkQuanLy.setEnabled(false);
        btnThem.setEnabled(true);
        btnCapNhat.setEnabled(false);
    }
 private String removeAccent(String s) {
        String temp = Normalizer.normalize(s, Normalizer.Form.NFD);
        Pattern pattern = Pattern.compile("\\p{InCombiningDiacriticalMarks}+");
        return pattern.matcher(temp).replaceAll("").replaceAll("Đ", "D").replace("đ", "");
        /*Notes: Thêm phần ".replaceAll("Đ", "D").replace("đ", "")" vào*/
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        quanlytaikhoan = new javax.swing.JLabel();
        ten = new javax.swing.JLabel();
        txtTenNguoiDung = new javax.swing.JTextField();
        tendn = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        chkNhanVien = new javax.swing.JRadioButton();
        chkQuanLy = new javax.swing.JRadioButton();
        quyen = new javax.swing.JLabel();
        mk = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDSTaiKhoan = new javax.swing.JTable();
        btnThoat = new javax.swing.JButton();
        mk1 = new javax.swing.JLabel();
        comTinhTrang = new javax.swing.JComboBox<>();
        txtMatKhau = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(630, 547));

        quanlytaikhoan.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        quanlytaikhoan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quanlytaikhoan.setText("Quản Lý Tài Khoản Thành Viên");
        quanlytaikhoan.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.white, java.awt.Color.lightGray));

        ten.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ten.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ten.setText("Tên Người Dùng");

        tendn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tendn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tendn.setText("Tên Đăng Nhập  ");

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/themtk.png"))); // NOI18N
        btnThem.setText("Thêm   ");
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnCapNhat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/capnhattk.png"))); // NOI18N
        btnCapNhat.setText("Cập Nhật");
        btnCapNhat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCapNhatMouseReleased(evt);
            }
        });
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/searchtk.png"))); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        buttonGroup1.add(chkNhanVien);
        chkNhanVien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkNhanVien.setText("Nhân Viên");

        buttonGroup1.add(chkQuanLy);
        chkQuanLy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkQuanLy.setText("Quản Lý");

        quyen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quyen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quyen.setText("Phân Quyền       ");

        mk.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mk.setText("Mật Khẩu            ");
        mk.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        txtTimKiem.setForeground(new java.awt.Color(0, 102, 102));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh Sách Tài Khoản", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 16))); // NOI18N
        jPanel1.setToolTipText("");

        tableDSTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Tên Người Dùng", "Tên Đăng Nhập", "Phân Quyền "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableDSTaiKhoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDSTaiKhoanMouseClicked(evt);
            }
        });
        tableDSTaiKhoan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableDSTaiKhoanKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableDSTaiKhoan);
        if (tableDSTaiKhoan.getColumnModel().getColumnCount() > 0) {
            tableDSTaiKhoan.getColumnModel().getColumn(0).setPreferredWidth(40);
            tableDSTaiKhoan.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnThoat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/thoat.png"))); // NOI18N
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        mk1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mk1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mk1.setText("Trạng Thái         ");
        mk1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        comTinhTrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(quanlytaikhoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThoat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mk1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comTinhTrang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(quyen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tendn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ten, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mk, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenNguoiDung, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(txtTenDangNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chkQuanLy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkNhanVien))
                            .addComponent(txtMatKhau))))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCapNhat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(quanlytaikhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ten, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenNguoiDung, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tendn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quyen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkQuanLy)
                            .addComponent(chkNhanVien))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mk, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtMatKhau)
                                .addGap(8, 8, 8))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mk1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comTinhTrang, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        taiKhoanService = new TaiKhoanService();
        dsTaiKhoan = taiKhoanService.timKiemTaiKhoan(txtTimKiem.getText());
        dtmTaiKhoan = new DefaultTableModel();

        dtmTaiKhoan.addColumn("STT");
        dtmTaiKhoan.addColumn("Tên Người Dùng");
        dtmTaiKhoan.addColumn("Tên Đăng Nhập");
        dtmTaiKhoan.addColumn("Phân Quyền");
        dtmTaiKhoan.addColumn("Trạng Thái");
        ////////////////////////////////// combobox

        dcTinhTrang = new DefaultComboBoxModel();
        dcTinhTrang.addElement("Hoạt Động");
        dcTinhTrang.addElement("Đã Khóa");
        int stt = 0;
        for (TaiKhoan taiKhoan : dsTaiKhoan) {
            stt++;
            Vector<Object> vec = new Vector<>();
            vec.add(stt);
            vec.add(taiKhoan.getHoTen());
            vec.add(taiKhoan.getTenDangNhap());
            vec.add(taiKhoan.getQuyen());
            vec.add(taiKhoan.getTinhTrang());
            dtmTaiKhoan.addRow(vec);
        }

        tableDSTaiKhoan.setModel(dtmTaiKhoan);
        comTinhTrang.setModel(dcTinhTrang);

    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void tableDSTaiKhoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDSTaiKhoanMouseClicked

        comTinhTrang.setEnabled(true);
        btnCapNhat.setEnabled(true);

        int row = tableDSTaiKhoan.getSelectedRow();
        taiKhoanSelected = dsTaiKhoan.get(row);

        txtTenNguoiDung.setText(taiKhoanSelected.getHoTen());
        txtTenDangNhap.setText(taiKhoanSelected.getTenDangNhap());
        txtMatKhau.setText(taiKhoanSelected.getMatKhau());
        comTinhTrang.setSelectedItem(taiKhoanSelected.getTinhTrang());

        if (taiKhoanSelected.getQuyen().equals("Quản Lý")) {
            chkQuanLy.setSelected(true);
            chkNhanVien.setEnabled(false);
            txtTenNguoiDung.setEditable(false);
            txtTenDangNhap.setEditable(false);
            btnThem.setEnabled(false);
            comTinhTrang.setEnabled(false);

        } else {
            chkNhanVien.setSelected(true);
            chkQuanLy.setEnabled(false);
            txtTenNguoiDung.setEditable(true);
            txtTenDangNhap.setEditable(false);
            btnThem.setEnabled(true);
            comTinhTrang.setEnabled(true);
        }

        btnThem.setEnabled(false);

    }//GEN-LAST:event_tableDSTaiKhoanMouseClicked


    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // kiem tra tendangnhap 
        if (taiKhoanService.kiemTraTonTai(txtTenDangNhap.getText())) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập Đã Tồn Tại", "", JOptionPane.OK_OPTION, icon);
            txtTenDangNhap.setText("");
            txtTenDangNhap.requestFocus();
            return;

        }
        // Kiểm tra trống và độ dài ký tự tên người dùng
        if (txtTenNguoiDung.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tên Người Dùng Không Thể Trống", "", JOptionPane.OK_OPTION, icon);
            txtTenNguoiDung.requestFocus();
            txtTenNguoiDung.setText("");
            return;
        }
        if (!removeAccent(txtTenNguoiDung.getText()).matches("^[a-zA-z 0-9]{2,100}$")) {
            JOptionPane.showMessageDialog(null, "Tên Người Dùng Không Chứa các ký tự đặc biệt", "", JOptionPane.OK_OPTION, icon);
            txtTenNguoiDung.requestFocus();
            return;
        }
        if (txtTenNguoiDung.getText().length() > 255) {
            JOptionPane.showMessageDialog(null, "Tên Người Dùng Không Thể Lớn Hơn 255 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtTenNguoiDung.setText("");
            txtTenNguoiDung.requestFocus();
            return;
        }
        if (txtTenNguoiDung.getText().trim().length() < 4) {
            JOptionPane.showMessageDialog(null, "Tên Người Dùng Không Thể Nhỏ Hơn 4 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtTenNguoiDung.setText("");
            txtTenNguoiDung.requestFocus();
            return;
        }

        // Kiểm tra trống và độ dài ký tự tên Đăng Nhập
        if (txtTenDangNhap.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập Không Thể Trống", "", JOptionPane.OK_OPTION, icon);
            txtTenDangNhap.requestFocus();
            return;
        }

        if (txtTenDangNhap.getText().length() > 100) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập Không Thể Lớn Hơn 100 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtTenDangNhap.setText("");
            txtTenDangNhap.requestFocus();
            return;
        }
        if (txtTenDangNhap.getText().trim().length() < 4) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập Không Thể Nhỏ Hơn 4 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtTenDangNhap.setText("");
            txtTenDangNhap.requestFocus();
            return;
        }

        if (!(txtTenDangNhap.getText().trim().matches("[a-zA-Z0-9_]{3,100}"))) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập Phải Là Ký Không Dấu Tự Hoặc Số Và Không Khoảng Trắng", "", JOptionPane.OK_OPTION, icon);
            txtTenDangNhap.setText("");
            txtTenDangNhap.requestFocus();
            return;
        }
        // Kiểm tra trống và độ dài ký tự mật khẩu
        if (txtMatKhau.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Mật Khẩu Không Thể Trống", "", JOptionPane.OK_OPTION, icon);
            txtMatKhau.requestFocus();
            return;
        }

        if (txtMatKhau.getText().trim().length() > 100) {
            JOptionPane.showMessageDialog(null, "Mật Khẩu Không Thể Lớn Hơn 100 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtMatKhau.setText("");
            txtMatKhau.requestFocus();
            return;
        }
        if (txtMatKhau.getText().trim().length() < 3) {
            JOptionPane.showMessageDialog(null, "Mật Khẩu Phải Lớn Hơn 3 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtMatKhau.setText("");
            txtMatKhau.requestFocus();
            return;
        }
        if (!(txtMatKhau.getText().trim().matches("[a-zA-Z0-9_]{3,100}"))) {
            JOptionPane.showMessageDialog(null, "Mật Khẩu Phải Là Ký Tự Không Dấu Hoặc Số", "", JOptionPane.OK_OPTION, icon);
            txtMatKhau.setText("");
            txtMatKhau.requestFocus();
            return;
        }
        TaiKhoan taiKhoan = new TaiKhoan();

        taiKhoan.setHoTen(txtTenNguoiDung.getText().trim());
        taiKhoan.setTenDangNhap(txtTenDangNhap.getText().trim());
        taiKhoan.setMatKhau(txtMatKhau.getText().trim());

        if (chkQuanLy.isSelected()) {
            taiKhoan.setQuyen("1");
        } else {
            taiKhoan.setQuyen("0");
        }
        String hoatdong = comTinhTrang.getSelectedItem().toString();
        if (comTinhTrang.getSelectedItem().toString().equals("Hoạt Động")) {
            String hd1 = hoatdong.replaceAll(hoatdong, "0");
            taiKhoan.setTinhTrang(hd1);
        }

        int result = taiKhoanService.themTaiKhoan(taiKhoan);
        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Thêm Tài Khoản Thành Công", "", JOptionPane.OK_OPTION, iconSuccess);
        }
        HienThiLenTable();
        txtTenDangNhap.setText("");
        txtTenDangNhap.setEditable(true);
        txtTenNguoiDung.setText("");
        txtMatKhau.setText("");
        chkNhanVien.setSelected(true);
        comTinhTrang.setEnabled(false);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed

        Icon iconQ = new ImageIcon(getClass().getResource("/image/question.png"));
        int ret = JOptionPane.showConfirmDialog(null, "Cập Nhật Tài Khoản [" + txtTenDangNhap.getText() + "]", "Cập Nhật", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, iconQ);
        if (ret == JOptionPane.NO_OPTION || ret == JOptionPane.CLOSED_OPTION) {
            return;
        }
        if (txtTenNguoiDung.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tên Người Dùng Không Thể Trống", "", JOptionPane.OK_OPTION, icon);
            txtTenNguoiDung.requestFocus();
            return;
        }

        if (txtTenNguoiDung.getText().length() > 255) {
            JOptionPane.showMessageDialog(null, "Tên Người Dùng Không Thể Lớn Hơn 255 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtTenNguoiDung.setText("");
            txtTenNguoiDung.requestFocus();
            return;
        }
        if (txtTenNguoiDung.getText().trim().length() < 4) {
            JOptionPane.showMessageDialog(null, "Tên Người Dùng Không Thể Nhỏ Hơn 4 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtTenNguoiDung.setText("");
            txtTenNguoiDung.requestFocus();
            return;
        }
       if (!removeAccent(txtTenNguoiDung.getText()).matches("^[a-zA-z 0-9]{4,100}$")) {
            JOptionPane.showMessageDialog(null, "Tên Người Dùng Không Chứa các ký tự đặc biệt", "", JOptionPane.OK_OPTION, icon);
            txtTenNguoiDung.requestFocus();
            return;
        }
        // Kiểm tra trống và độ dài ký tự tên Đăng Nhập
        if (txtTenDangNhap.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập Không Thể Trống", "", JOptionPane.OK_OPTION, icon);
            txtTenDangNhap.requestFocus();
            return;
        }

        if (txtTenDangNhap.getText().length() > 100) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập Không Thể Lớn Hơn 100 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtTenDangNhap.setText("");
            txtTenDangNhap.requestFocus();
            return;
        }
        if (txtTenDangNhap.getText().trim().length() < 4) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập Không Thể Nhỏ Hơn 4 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtTenDangNhap.setText("");
            txtTenDangNhap.requestFocus();
            return;
        }
        if (!(txtTenDangNhap.getText().trim().matches("[a-zA-Z0-9_]{3,100}"))) {
            JOptionPane.showMessageDialog(null, "Tên Đăng Nhập Phải Là Ký Không Dấu Tự Hoặc Số", "", JOptionPane.OK_OPTION, icon);
            txtTenDangNhap.setText("");
            txtTenDangNhap.requestFocus();
            return;
        }
        // Kiểm tra trống và độ dài ký tự mật khẩu
        if (txtMatKhau.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Mật Khẩu Không Thể Trống", "", JOptionPane.OK_OPTION, icon);
            txtMatKhau.requestFocus();
            return;
        }

        if (txtMatKhau.getText().length() > 100) {
            JOptionPane.showMessageDialog(null, "Mật Khẩu Không Thể Lớn Hơn 100 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtMatKhau.setText("");
            txtMatKhau.requestFocus();
            return;
        }
        if (txtMatKhau.getText().length() < 3) {
            JOptionPane.showMessageDialog(null, "Mật Khẩu Phải Lớn Hơn 3 Ký Tự", "", JOptionPane.OK_OPTION, icon);
            txtMatKhau.setText("");
            txtMatKhau.requestFocus();
            return;
        }
        if (!(txtMatKhau.getText().matches("[a-zA-Z0-9_]{3,100}"))) {
            JOptionPane.showMessageDialog(null, "Mật Khẩu Phải Là Ký Tự Không Dấu Hoặc Số", "", JOptionPane.OK_OPTION, icon);
            txtMatKhau.setText("");
            txtMatKhau.requestFocus();
            return;
        }
        TaiKhoan taiKhoan = new TaiKhoan();
        taiKhoan.setHoTen(txtTenNguoiDung.getText().trim());
        taiKhoan.setTenDangNhap(txtTenDangNhap.getText().trim());
        taiKhoan.setMatKhau(txtMatKhau.getText().trim());

        if (chkQuanLy.isSelected()) {
            taiKhoan.setQuyen("1");
        } else if (chkNhanVien.isSelected()) {
            taiKhoan.setQuyen("0");
        }
        String hoatdong = comTinhTrang.getSelectedItem().toString();
        if (comTinhTrang.getSelectedItem().toString().equals("Hoạt Động")) {
            String hd1 = hoatdong.replaceAll(hoatdong, "0");
            taiKhoan.setTinhTrang(hd1);
        } else {
            String hd2 = hoatdong.replaceAll(hoatdong, "1");
            taiKhoan.setTinhTrang(hd2);
        }

        int result = taiKhoanService.suaTaiKhoan(taiKhoan);
        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Cập Nhật Thành Công", "", JOptionPane.OK_OPTION, iconSuccess);
            btnThem.setEnabled(true);
            btnCapNhat.setEnabled(false);
            txtTenNguoiDung.setEditable(true);
        }
//        else {
//            JOptionPane.showMessageDialog(null, "Không Thể Thay Đổi Tên Đăng Nhập");
//            txtTenDangNhap.setText(taiKhoanSelected.getTenDangNhap());
//            return;
//        }
        HienThiLenTable();
        txtTenDangNhap.setText("");
        txtTenDangNhap.setEditable(true);
        txtTenNguoiDung.setText("");
        txtMatKhau.setText("");
        chkNhanVien.setSelected(true);
        comTinhTrang.setEnabled(false);

    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnCapNhatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatMouseReleased

    }//GEN-LAST:event_btnCapNhatMouseReleased

    private void tableDSTaiKhoanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableDSTaiKhoanKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            HienThiLenTable();
            comTinhTrang.setEnabled(false);

            txtTenNguoiDung.setText("");
            txtTenDangNhap.setText("");
            txtTenDangNhap.setEditable(true);
            txtTenNguoiDung.setEditable(true);
            txtMatKhau.setText("");
            chkNhanVien.setSelected(true);
            chkQuanLy.setEnabled(false);
            btnThem.setEnabled(true);
            btnCapNhat.setEnabled(false);

        }
    }//GEN-LAST:event_tableDSTaiKhoanKeyPressed
    private void HienThiLenTable() {
        //--------------------------- bang
        taiKhoanService = new TaiKhoanService();
        dsTaiKhoan = taiKhoanService.HienThiTaiKhoan();
        dtmTaiKhoan = new DefaultTableModel();

        dtmTaiKhoan.addColumn("STT");
        dtmTaiKhoan.addColumn("Tên Người Dùng");
        dtmTaiKhoan.addColumn("Tên Đăng Nhập");
        dtmTaiKhoan.addColumn("Phân Quyền");
        dtmTaiKhoan.addColumn("Trạng Thái");
        ////////////////////////////////// combobox

        dcTinhTrang = new DefaultComboBoxModel();
        dcTinhTrang.addElement("Hoạt Động");
        dcTinhTrang.addElement("Đã Khóa");
        int stt = 0;
        for (TaiKhoan taiKhoan : dsTaiKhoan) {
            stt++;
            Vector<Object> vec = new Vector<>();
            vec.add(stt);
            vec.add(taiKhoan.getHoTen());
            vec.add(taiKhoan.getTenDangNhap());
            vec.add(taiKhoan.getQuyen());
            vec.add(taiKhoan.getTinhTrang());
            dtmTaiKhoan.addRow(vec);
        }

        tableDSTaiKhoan.setModel(dtmTaiKhoan);
        comTinhTrang.setModel(dcTinhTrang);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLyTaiKhoan dialog = new QuanLyTaiKhoan(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton chkNhanVien;
    private javax.swing.JRadioButton chkQuanLy;
    private javax.swing.JComboBox<String> comTinhTrang;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mk;
    private javax.swing.JLabel mk1;
    private javax.swing.JLabel quanlytaikhoan;
    private javax.swing.JLabel quyen;
    private javax.swing.JTable tableDSTaiKhoan;
    private javax.swing.JLabel ten;
    private javax.swing.JLabel tendn;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtTenDangNhap;
    private javax.swing.JTextField txtTenNguoiDung;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

}
