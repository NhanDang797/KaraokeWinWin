/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.ConnectDB;
import dao.DangNhap;
import io.FileFactory;
import java.awt.Color;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.Normalizer;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Datphong extends javax.swing.JFrame {

    Connection con;
    Statement stmt;
    ResultSet rs;
    String sql;
    DefaultTableModel khModel;
    Vector header, data, row;
    Date date;
    SimpleDateFormat mat;
    int dong, ma_kh;
    String ma_p, nd, nl, gd, tt = "1";
    String ma_phong_main;
    //........................................

    DefaultTableModel dvModel, ddvModel;

    String maHoaDon;
    public String maDDP;
    public String maDichVu;
    String sldat;

    String ma_dv_cn;
    String sldat_CapNhat;

    //........................................
    public Datphong(java.awt.Frame parent, boolean modal, String maphong) {
        initComponents();
        HienThiUser();
        this.setLocationRelativeTo(null);
        setResizable(false);
        showTtkh();
        ma_phong_main = maphong;
        ketnoi(maphong);

    }

    private void showTtkh() {
        data = new Vector();
        try {
            con = ConnectDB.getConnect();
            stmt = con.createStatement();
            sql = "select * from KhachHang where tinh_trang < 2";
            /*Notes: Thêm "where tinh_trang = 2"*/
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                row = new Vector();
                row.add(rs.getInt("ma_KH"));
                row.add(rs.getString("ten_KH"));
                row.add(rs.getString("gioi_tinh"));
                row.add(rs.getString("sdt"));
                data.add(row);
            }
        } catch (SQLException e) {
            /*Notes: Thêm SQLException*/
            e.printStackTrace();
        }

        khModel = new DefaultTableModel();
        header = new Vector();
        header.add("Mã khách hàng");
        header.add("Tên khách hàng");
        header.add("Giới tính");
        header.add("Sđt");

        khModel.setDataVector(data, header);
        tbKh.setModel(khModel);
    }

    public void ketnoi(String text) {
        txtMa.setText(text);
        txtMa.setEditable(false);
    }

    private String removeAccent(String s) {
        String temp = Normalizer.normalize(s, Normalizer.Form.NFD);
        Pattern pattern = Pattern.compile("\\p{InCombiningDiacriticalMarks}+");
        return pattern.matcher(temp).replaceAll("").replaceAll("Đ", "D").replace("đ", "");
        /*Notes: Thêm phần ".replaceAll("Đ", "D").replace("đ", "")" vào*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        textArea1 = new java.awt.TextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        btnDat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbKh = new javax.swing.JTable();
        txtSdt = new javax.swing.JTextField();
        rdNam = new javax.swing.JRadioButton();
        rdNu = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnThoat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(182, 182, 233));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        jLabel1.setText("Đặt phòng ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(330, 330, 330))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Mã phòng");

        txtMa.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        btnDat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/dat.png"))); // NOI18N
        btnDat.setText("Đặt phòng");
        btnDat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatActionPerformed(evt);
            }
        });

        tbKh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbKh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbKh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbKhMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbKh);

        txtSdt.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtSdt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSdtMouseClicked(evt);
            }
        });

        buttonGroup1.add(rdNam);
        rdNam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdNam.setText("Nam");
        rdNam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdNamMouseClicked(evt);
            }
        });

        buttonGroup1.add(rdNu);
        rdNu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdNu.setText("Nữ");
        rdNu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdNuMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("Giới tính");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Số điện thoại");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("Tên khách hàng");

        txtTen.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtTen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTenMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Danh sách khách hàng");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Thêm khách hàng");

        btnThoat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/thoat.png"))); // NOI18N
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(28, 28, 28)
                                .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6)
                                .addGap(32, 32, 32)
                                .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(rdNam)
                                .addGap(9, 9, 9)
                                .addComponent(rdNu)))
                        .addGap(0, 9, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnDat, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(rdNu)
                    .addComponent(rdNam))
                .addGap(33, 33, 33)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnDat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtSdt, txtTen});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatActionPerformed
        if (tbKh.getSelectedRowCount() != 0) {
            //Ma khach hang
            ma_kh = (Integer) khModel.getValueAt(tbKh.getSelectedRow(), 0);
        } else {
            //Them khach hang
            String ten_KH = txtTen.getText();
            if (ten_KH.isEmpty()) {
                /*Notes: Sửa code chỗ này. Code cũ "removeAccent(ten_KH).isEmpty()"*/
                JOptionPane.showMessageDialog(this, "Tên khách hàng không được bỏ trống !");
                return;
            } else if (!removeAccent(ten_KH).matches("^[a-zA-z ]{2,100}$")) {
                JOptionPane.showMessageDialog(this, "Tên khách hàng không hợp lệ !");
                return;
            }

            String sdt = txtSdt.getText();
            if (sdt.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Số điện thoại không được bỏ trống !");
                return;
            } else if (!sdt.matches("\\d{10}")) {
                JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ !");
                return;
            }

            String gioi_tinh = "Chưa rõ";
            if (rdNam.isSelected()) {
                gioi_tinh = "Nam";
            } else if (rdNu.isSelected()) {
                gioi_tinh = "Nữ";
            }

            try {
                con = ConnectDB.getConnect();
                stmt = con.createStatement();
                stmt.executeUpdate("insert into KhachHang(ten_KH, gioi_tinh, sdt, tinh_trang) values (N'" + ten_KH + "', N'" + gioi_tinh + "', '" + sdt + "', 0)");

//                rs = stmt.executeQuery("select ma_KH from KhachHang where ten_KH = N'" + ten_KH + "' and sdt = '" + sdt + "' and gioi_tinh = '" + gioi_tinh + "'");
//                while (rs.next()) {
//                    ma_kh = rs.getInt("ma_KH");
//                }
//                System.out.println(ma_kh);

                /*Notes: Gộp 2 trycatch lại*/
            } catch (SQLException e) {
                e.printStackTrace();
            }

            laymaKM();
            showTtkh();
        }

        //Dat phong
        ma_p = txtMa.getText().trim(); //*ma phong

        date = new Date();
        mat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        nl = mat.format(date); //*Ngay lap

        date = new Date();
        mat = new SimpleDateFormat("yyyy/MM/dd");
        nd = mat.format(date); //* Ngay dat

        date = new Date();
        mat = new SimpleDateFormat("HH:mm");
        gd = mat.format(date); //*gio dat

        //tt //0 la chua nhan, 1 la da nhan, 2 la xoa // tinh trang
        try {
            con = ConnectDB.getConnect();
            stmt = con.createStatement();
            stmt.executeUpdate("insert into DonDatPhong(ma_phong, ma_KH, ngay_lap, ngay_dat, gio_dat, tinh_trang) values ('" + ma_p + "', " + ma_kh + ", ' " + nl + "', '" + nd + "', '" + gd + "', " + tt + ")");
            stmt.executeUpdate("update KhachHang set tinh_trang = 2 where ma_KH = '" + ma_kh + "'");
            int ret = stmt.executeUpdate("update DMPhong set tinh_trang = 1 where ma_phong = '" + ma_p + "'");
            /*Notes: Thêm câu lệnh sql mới cho phép cập nhật tình trạng khách hàng và rút ngắn lại code*/

            if (ret > 0) {
                hienThiMa_DDP(ma_p);
//                int ret1 = JOptionPane.showConfirmDialog(null, "Đặt phòng Thành Công \nThêm Dịch Vụ ?", "", JOptionPane.YES_NO_OPTION);
                /*Notes: Rút ngắn lại code*/
                if (JOptionPane.showConfirmDialog(null, "Đặt phòng Thành Công \nThêm Dịch Vụ ?", "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    dispose();
                    DatDV datdv = new DatDV(null, true, maHoaDon, ma_p);
                    datdv.setVisible(true);
                } else {
                    dispose();
                    MenuChinh menuchinh = new MenuChinh(tenDN, hoTen, quyen, matkhau);
                    menuchinh.setVisible(true);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        // gọi hàm lấy mã hóa đơn , mã đơn Dp


    }//GEN-LAST:event_btnDatActionPerformed

    private void tbKhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbKhMouseClicked
        txtTen.setText("");
        txtSdt.setText("");
        rdNam.setSelected(false);
        rdNu.setSelected(false);
    }//GEN-LAST:event_tbKhMouseClicked

    private void rdNuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdNuMouseClicked
        showTtkh();
    }//GEN-LAST:event_rdNuMouseClicked

    private void rdNamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdNamMouseClicked
        showTtkh();
    }//GEN-LAST:event_rdNamMouseClicked

    private void txtSdtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSdtMouseClicked
        showTtkh();
    }//GEN-LAST:event_txtSdtMouseClicked

    private void txtTenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTenMouseClicked
        showTtkh();
    }//GEN-LAST:event_txtTenMouseClicked

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        dispose();
        MenuChinh menuchinh = new MenuChinh(tenDN, hoTen, quyen, matkhau);
        menuchinh.setVisible(true);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void hienThiMa_DDP(String maphong) {
        ///_________Nhân Đặng_____________________________________________________________________
        // lấy mã Đơn đặt phòng với phòng này
        //insert vào bảng Hóa ĐƠn 

        try {
            sql = "SELECT DonDatPhong.ma_DDP FROM DonDatPhong,DMPhong WHERE DonDatPhong.tinh_trang =1 AND DMPhong.ma_phong = ?";
            PreparedStatement pstm = con.prepareStatement(sql);
            pstm.setString(1, maphong);
            ResultSet rs = pstm.executeQuery();
            while (rs.next()) {
                maDDP = rs.getString(1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        ///___________________________________________________________________________________
        insertHoaDon(maDDP);// lấy dc mã đc đơn đạt phòng 
    }

    // thêm vào các trường : maDDP ,mãKM , ngày lập ,giờ hát ,  
    public void insertHoaDon(String maDDP) {
        //System.out.println("mã DDP :" + maDDP);
        try {
            sql = "insert into HoaDon values(?,?,?,?,?)";
            PreparedStatement pstm = con.prepareStatement(sql);
            pstm.setString(1, maDDP);
            pstm.setString(2, "1");
            pstm.setString(3, nl);
            pstm.setString(4, "0");
            pstm.setString(5, "0");
            pstm.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
        hienThiMaHoaDon(maDDP);
    }

    public void hienThiMaHoaDon(String maDDP) {
        try {
            sql = "SELECT HoaDon.ma_DDP , dbo.HoaDon.ma_HD FROM HoaDon WHERE HoaDon.ma_DDP= ?";
            PreparedStatement pstm = con.prepareStatement(sql);
            pstm.setString(1, maDDP);
            ResultSet rs = pstm.executeQuery();
            while (rs.next()) {
                maHoaDon = rs.getString(2);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Datphong dialog = new Datphong(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDat;
    private javax.swing.JButton btnThoat;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rdNam;
    private javax.swing.JRadioButton rdNu;
    private javax.swing.JTable tbKh;
    private java.awt.TextArea textArea1;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
String tenDN, hoTen, quyen, matkhau;

    private void HienThiUser() {
        File file = new File("data.data");
        if (file.exists()) {
            Object data = FileFactory.ReadData("data.data");
            if (data != null) {
                DangNhap dn = (DangNhap) data; // ép kiểu về dạng đối tượng
                tenDN = dn.getTen();
                hoTen = dn.getHoten();
                quyen = dn.getQuyen();
                matkhau = dn.getMatkhau();
            }
        }
    }

    private void laymaKM() {
        try {
            con = ConnectDB.getConnect();
            stmt = con.createStatement();
            
            rs = stmt.executeQuery("select ma_KH from KhachHang where ten_KH = N'"+ txtTen.getText()+ "' and sdt = '" + txtSdt.getText()+"'");
            while (rs.next()) {
                ma_kh = rs.getInt("ma_KH");
            }
            System.out.println(ma_kh);

            /*Notes: Gộp 2 trycatch lại*/
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

}
